{
  "hash": "111a5ad730dea2b7c0c31b970c67cf33",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Árbol de Decisión y Random Forest: La Calificación de los Partidos Políticos en México\"\ncss: custom.css\n\nexecute:\n  enabled: true\n  kernel: python3\n---\n\n\n\n\n\n# Modelo de Árbol de Decisión: {.fade-in}\n\n## Cargar las Libererías: {.fade-in}\n\n::: {#45bc259b .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.metrics import accuracy_score, f1_score\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport category_encoders as ce\nimport numpy as np\nimport pandas as pd\n\nfrom sklearn.tree import DecisionTreeClassifier, DecisionTreeRegressor\nfrom sklearn.metrics import accuracy_score, f1_score\n```\n:::\n\n\n## Cargar los Datos:  {.fade-in} \nSe cargan los datos desde un archivo CSV utilizando la librería `pandas`.\n\n::: {#80d90d7f .cell execution_count=2}\n``` {.python .cell-code}\ndf = pd.read_csv('/home/barea/randomforest/{{cookiecutter.project_slug}}/data/Partido_2023.csv')\ndf.head(10)\n```\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>P11_1_19</th>\n      <th>P11_1A_12</th>\n      <th>P11_1A_17</th>\n      <th>P11_1A_18</th>\n      <th>P11_1A_22</th>\n      <th>P11_1A_23</th>\n      <th>P11_1A_19</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>4</td>\n      <td>3.0</td>\n      <td>4.0</td>\n      <td>3.0</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>9.0</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>7.0</td>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>5.0</td>\n      <td>7.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>4</td>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3</td>\n      <td>3.0</td>\n      <td>3.0</td>\n      <td>5.0</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>3</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>7.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>3</td>\n      <td>5.0</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>7.0</td>\n      <td>7.0</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>4</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>7.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Imputar los Datos del Tibble por la Mediana: {.fade-in}\nSe imputan los valores nulos en el DataFrame utilizando la mediana de cada columna.\n\n::: {#9675f80f .cell execution_count=3}\n``` {.python .cell-code}\ndf = df.fillna(df.median())\n```\n:::\n\n\n## Explorarar si Existen Valores Nulos: {.fade-in}\nSe verifica la existencia de valores nulos en el Tibble.\n\n::: {#2a622c44 .cell execution_count=4}\n``` {.python .cell-code}\ndf.isnull().sum()\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```\nP11_1_19     0\nP11_1A_12    0\nP11_1A_17    0\nP11_1A_18    0\nP11_1A_22    0\nP11_1A_23    0\nP11_1A_19    0\ndtype: int64\n```\n:::\n:::\n\n\n## Separar de Variables Predictoras y Objetivo: {.fade-in}\nSe separan las variables predictoras (X) de la variable objetivo (y).\n\n::: {#8b6ab65a .cell execution_count=5}\n``` {.python .cell-code}\nX = df.drop(['P11_1A_19'], axis=1)\ny = df['P11_1A_19']\n```\n:::\n\n\n# Dividir de Datos en Conjuntos de Entrenamiento y Prueba: {.fade-in}\nSe dividen los datos en conjuntos de entrenamiento y prueba.\n\n::: {#b6089d7a .cell execution_count=6}\n``` {.python .cell-code}\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=42, stratify=y)\n```\n:::\n\n\n## Conocer las Variables Predictoras y de Entrenamiento: {.fade-in}\n\n::: {#dee5817d .cell execution_count=7}\n``` {.python .cell-code}\nprint(X_train.columns) \nprint(X_test.columns)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nIndex(['P11_1_19', 'P11_1A_12', 'P11_1A_17', 'P11_1A_18', 'P11_1A_22',\n       'P11_1A_23'],\n      dtype='object')\nIndex(['P11_1_19', 'P11_1A_12', 'P11_1A_17', 'P11_1A_18', 'P11_1A_22',\n       'P11_1A_23'],\n      dtype='object')\n```\n:::\n:::\n\n\n## Codificar las Variables: {.fade-in}\nSe codifican las variables categóricas utilizando `OrdinalEncoder`.\n\n::: {#1151b028 .cell execution_count=8}\n``` {.python .cell-code}\nencoder = ce.OrdinalEncoder(cols=[\n'P11_1_19',\n'P11_1A_12',\n'P11_1A_17',\n'P11_1A_18',\n'P11_1A_22',\n'P11_1A_23',\n])\n\nX_train_encoded = encoder.fit_transform(X_train)\nX_test_encoded = encoder.transform(X_test)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/home/barea/anaconda3/envs/investigacion/lib/python3.9/site-packages/sklearn/base.py:411: FutureWarning: The `_get_tags` method is deprecated in 1.6 and will be removed in 1.7. Please implement the `__sklearn_tags__` method.\n  warnings.warn(\n```\n:::\n:::\n\n\n## Asegurar que no Haya Valores NaN o inf en los Datos de Entrenamiento y Prueba: {.fade-in}\nSe aseguran que no existan valores NaN o infinitos en los datos de entrenamiento y prueba.\n\n::: {#5b8ab914 .cell execution_count=9}\n``` {.python .cell-code}\nX_train = X_train.replace([np.inf, -np.inf], np.nan).dropna()\nX_test = X_test.replace([np.inf, -np.inf], np.nan).dropna()\n```\n:::\n\n\n## Buscar los Hiperparámetros del Árbpl de Decisión: {.fade-in}\nSe realiza una búsqueda de hiperparámetros para el modelo de Árbol de Decisión utilizando GridSearchCV.\n\n::: {#86ba91cb .cell execution_count=10}\n``` {.python .cell-code}\nparam_grid = {\n    'max_depth': [2, 4, 6, 8, 10],\n    'min_samples_split': [2, 5, 10],\n    'min_samples_leaf': [1, 2, 4]\n}\ngrid_search_tree = GridSearchCV(DecisionTreeClassifier(random_state=0), param_grid, cv=5)\ngrid_search_tree.fit(X_train, y_train)\nbest_tree = grid_search_tree.best_estimator_\n```\n:::\n\n\n## Predecir y Evaluar del Árbol de Decisión: {.fade-in}\nSe predicen y evalúan los resultados del modelo de Árbol de Decisión.\n\n::: {#e93819fd .cell execution_count=11}\n``` {.python .cell-code}\ny_train_pred_tree = best_tree.predict(X_train)\ny_test_pred_tree = best_tree.predict(X_test)\n\ntrain_accuracy_tree = accuracy_score(y_train, y_train_pred_tree)\ntest_accuracy_tree = accuracy_score(y_test, y_test_pred_tree)\ntrain_f1_tree = f1_score(y_train, y_train_pred_tree, average='micro')\ntest_f1_tree = f1_score(y_test, y_test_pred_tree, average='micro')\n\nprint('Accuracy en train (árbol de decisión):', train_accuracy_tree)\nprint('Accuracy en test (árbol de decisión):', test_accuracy_tree)\nprint(\"El f1 score en train (árbol de decisión): \", train_f1_tree)\nprint(\"El f1 score en test (árbol de decisión): \", test_f1_tree)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAccuracy en train (árbol de decisión): 0.7116146062472504\nAccuracy en test (árbol de decisión): 0.6815226689478187\nEl f1 score en train (árbol de decisión):  0.7116146062472504\nEl f1 score en test (árbol de decisión):  0.6815226689478187\n```\n:::\n:::\n\n\n# Visualización de la importancia de las características en el Árbol de Decisión: {.fade-in}\nSe visualiza la importancia de las características en el modelo de Árbol de Decisión.\n\n::: {#8bd2adcc .cell execution_count=12}\n``` {.python .cell-code}\nimportances_tree = best_tree.feature_importances_\nsns.barplot(x=X.columns, y=importances_tree, palette='bright', saturation=2.0, edgecolor='black', linewidth=2)\nplt.title('Importancia de cada Feature en el Árbol de Decisión')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/tmp/ipykernel_26881/2873126456.py:2: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=X.columns, y=importances_tree, palette='bright', saturation=2.0, edgecolor='black', linewidth=2)\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](randomforest_model_files/figure-html/cell-13-output-2.png){width=571 height=452}\n:::\n:::\n\n\n# Modelo de Ramdom Forest: {.fade-in}\n\n::: {#40450266 .cell execution_count=13}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, f1_score\n```\n:::\n\n\n## Dividir el Conjunto de Datos en Entrenamiento y Prueba: {.fade-in}\nSe dividen los datos en conjuntos de entrenamiento y prueba.\n\n::: {#a089a6af .cell execution_count=14}\n``` {.python .cell-code}\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n```\n:::\n\n\n## Ajustar el Modelo de Random Forest: {.fade-in}\nSe ajusta el modelo de Random Forest con los datos de entrenamiento.\n\n::: {#583aea8f .cell execution_count=15}\n``` {.python .cell-code}\nmodelo_rf = RandomForestClassifier(n_estimators=100, random_state=42)\nmodelo_rf.fit(X_train, y_train)\n```\n\n::: {.cell-output .cell-output-display execution_count=33}\n```{=html}\n<style>#sk-container-id-2 {\n  /* Definition of color scheme common for light and dark mode */\n  --sklearn-color-text: #000;\n  --sklearn-color-text-muted: #666;\n  --sklearn-color-line: gray;\n  /* Definition of color scheme for unfitted estimators */\n  --sklearn-color-unfitted-level-0: #fff5e6;\n  --sklearn-color-unfitted-level-1: #f6e4d2;\n  --sklearn-color-unfitted-level-2: #ffe0b3;\n  --sklearn-color-unfitted-level-3: chocolate;\n  /* Definition of color scheme for fitted estimators */\n  --sklearn-color-fitted-level-0: #f0f8ff;\n  --sklearn-color-fitted-level-1: #d4ebff;\n  --sklearn-color-fitted-level-2: #b3dbfd;\n  --sklearn-color-fitted-level-3: cornflowerblue;\n\n  /* Specific color for light theme */\n  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n  --sklearn-color-icon: #696969;\n\n  @media (prefers-color-scheme: dark) {\n    /* Redefinition of color scheme for dark theme */\n    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n    --sklearn-color-icon: #878787;\n  }\n}\n\n#sk-container-id-2 {\n  color: var(--sklearn-color-text);\n}\n\n#sk-container-id-2 pre {\n  padding: 0;\n}\n\n#sk-container-id-2 input.sk-hidden--visually {\n  border: 0;\n  clip: rect(1px 1px 1px 1px);\n  clip: rect(1px, 1px, 1px, 1px);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n#sk-container-id-2 div.sk-dashed-wrapped {\n  border: 1px dashed var(--sklearn-color-line);\n  margin: 0 0.4em 0.5em 0.4em;\n  box-sizing: border-box;\n  padding-bottom: 0.4em;\n  background-color: var(--sklearn-color-background);\n}\n\n#sk-container-id-2 div.sk-container {\n  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n     but bootstrap.min.css set `[hidden] { display: none !important; }`\n     so we also need the `!important` here to be able to override the\n     default hidden behavior on the sphinx rendered scikit-learn.org.\n     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n  display: inline-block !important;\n  position: relative;\n}\n\n#sk-container-id-2 div.sk-text-repr-fallback {\n  display: none;\n}\n\ndiv.sk-parallel-item,\ndiv.sk-serial,\ndiv.sk-item {\n  /* draw centered vertical line to link estimators */\n  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n  background-size: 2px 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n}\n\n/* Parallel-specific style estimator block */\n\n#sk-container-id-2 div.sk-parallel-item::after {\n  content: \"\";\n  width: 100%;\n  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n  flex-grow: 1;\n}\n\n#sk-container-id-2 div.sk-parallel {\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  background-color: var(--sklearn-color-background);\n  position: relative;\n}\n\n#sk-container-id-2 div.sk-parallel-item {\n  display: flex;\n  flex-direction: column;\n}\n\n#sk-container-id-2 div.sk-parallel-item:first-child::after {\n  align-self: flex-end;\n  width: 50%;\n}\n\n#sk-container-id-2 div.sk-parallel-item:last-child::after {\n  align-self: flex-start;\n  width: 50%;\n}\n\n#sk-container-id-2 div.sk-parallel-item:only-child::after {\n  width: 0;\n}\n\n/* Serial-specific style estimator block */\n\n#sk-container-id-2 div.sk-serial {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: var(--sklearn-color-background);\n  padding-right: 1em;\n  padding-left: 1em;\n}\n\n\n/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\nclickable and can be expanded/collapsed.\n- Pipeline and ColumnTransformer use this feature and define the default style\n- Estimators will overwrite some part of the style using the `sk-estimator` class\n*/\n\n/* Pipeline and ColumnTransformer style (default) */\n\n#sk-container-id-2 div.sk-toggleable {\n  /* Default theme specific background. It is overwritten whether we have a\n  specific estimator or a Pipeline/ColumnTransformer */\n  background-color: var(--sklearn-color-background);\n}\n\n/* Toggleable label */\n#sk-container-id-2 label.sk-toggleable__label {\n  cursor: pointer;\n  display: flex;\n  width: 100%;\n  margin-bottom: 0;\n  padding: 0.5em;\n  box-sizing: border-box;\n  text-align: center;\n  align-items: start;\n  justify-content: space-between;\n  gap: 0.5em;\n}\n\n#sk-container-id-2 label.sk-toggleable__label .caption {\n  font-size: 0.6rem;\n  font-weight: lighter;\n  color: var(--sklearn-color-text-muted);\n}\n\n#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n  /* Arrow on the left of the label */\n  content: \"▸\";\n  float: left;\n  margin-right: 0.25em;\n  color: var(--sklearn-color-icon);\n}\n\n#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n  color: var(--sklearn-color-text);\n}\n\n/* Toggleable content - dropdown */\n\n#sk-container-id-2 div.sk-toggleable__content {\n  max-height: 0;\n  max-width: 0;\n  overflow: hidden;\n  text-align: left;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-2 div.sk-toggleable__content.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-2 div.sk-toggleable__content pre {\n  margin: 0.2em;\n  border-radius: 0.25em;\n  color: var(--sklearn-color-text);\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n  /* unfitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n  /* Expand drop-down */\n  max-height: 200px;\n  max-width: 100%;\n  overflow: auto;\n}\n\n#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n  content: \"▾\";\n}\n\n/* Pipeline/ColumnTransformer-specific style */\n\n#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator-specific style */\n\n/* Colorize estimator box */\n#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n#sk-container-id-2 div.sk-label label {\n  /* The background is the default theme color */\n  color: var(--sklearn-color-text-on-default-background);\n}\n\n/* On hover, darken the color of the background */\n#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n/* Label box, darken color on hover, fitted */\n#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n  color: var(--sklearn-color-text);\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Estimator label */\n\n#sk-container-id-2 div.sk-label label {\n  font-family: monospace;\n  font-weight: bold;\n  display: inline-block;\n  line-height: 1.2em;\n}\n\n#sk-container-id-2 div.sk-label-container {\n  text-align: center;\n}\n\n/* Estimator-specific */\n#sk-container-id-2 div.sk-estimator {\n  font-family: monospace;\n  border: 1px dotted var(--sklearn-color-border-box);\n  border-radius: 0.25em;\n  box-sizing: border-box;\n  margin-bottom: 0.5em;\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-0);\n}\n\n#sk-container-id-2 div.sk-estimator.fitted {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-0);\n}\n\n/* on hover */\n#sk-container-id-2 div.sk-estimator:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-2);\n}\n\n#sk-container-id-2 div.sk-estimator.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-2);\n}\n\n/* Specification for estimator info (e.g. \"i\" and \"?\") */\n\n/* Common style for \"i\" and \"?\" */\n\n.sk-estimator-doc-link,\na:link.sk-estimator-doc-link,\na:visited.sk-estimator-doc-link {\n  float: right;\n  font-size: smaller;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1em;\n  height: 1em;\n  width: 1em;\n  text-decoration: none !important;\n  margin-left: 0.5em;\n  text-align: center;\n  /* unfitted */\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n  color: var(--sklearn-color-unfitted-level-1);\n}\n\n.sk-estimator-doc-link.fitted,\na:link.sk-estimator-doc-link.fitted,\na:visited.sk-estimator-doc-link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\ndiv.sk-estimator:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link:hover,\n.sk-estimator-doc-link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\ndiv.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover,\ndiv.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n.sk-estimator-doc-link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n/* Span, style for the box shown on hovering the info icon */\n.sk-estimator-doc-link span {\n  display: none;\n  z-index: 9999;\n  position: relative;\n  font-weight: normal;\n  right: .2ex;\n  padding: .5ex;\n  margin: .5ex;\n  width: min-content;\n  min-width: 20ex;\n  max-width: 50ex;\n  color: var(--sklearn-color-text);\n  box-shadow: 2pt 2pt 4pt #999;\n  /* unfitted */\n  background: var(--sklearn-color-unfitted-level-0);\n  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n}\n\n.sk-estimator-doc-link.fitted span {\n  /* fitted */\n  background: var(--sklearn-color-fitted-level-0);\n  border: var(--sklearn-color-fitted-level-3);\n}\n\n.sk-estimator-doc-link:hover span {\n  display: block;\n}\n\n/* \"?\"-specific style due to the `<a>` HTML tag */\n\n#sk-container-id-2 a.estimator_doc_link {\n  float: right;\n  font-size: 1rem;\n  line-height: 1em;\n  font-family: monospace;\n  background-color: var(--sklearn-color-background);\n  border-radius: 1rem;\n  height: 1rem;\n  width: 1rem;\n  text-decoration: none;\n  /* unfitted */\n  color: var(--sklearn-color-unfitted-level-1);\n  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n}\n\n#sk-container-id-2 a.estimator_doc_link.fitted {\n  /* fitted */\n  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n  color: var(--sklearn-color-fitted-level-1);\n}\n\n/* On hover */\n#sk-container-id-2 a.estimator_doc_link:hover {\n  /* unfitted */\n  background-color: var(--sklearn-color-unfitted-level-3);\n  color: var(--sklearn-color-background);\n  text-decoration: none;\n}\n\n#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n  /* fitted */\n  background-color: var(--sklearn-color-fitted-level-3);\n}\n</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>RandomForestClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(random_state=42)</pre></div> </div></div></div></div>\n```\n:::\n:::\n\n\n# Predecir y Evaluar el  Modelo: {.fade-in}\nSe predicen y evalúan los resultados del modelo de Random Forest.\n\n::: {#cb080942 .cell execution_count=16}\n``` {.python .cell-code}\ny_train_pred = modelo_rf.predict(X_train)\ny_test_pred = modelo_rf.predict(X_test)\nprint(\"Accuracy en train:\", accuracy_score(y_train, y_train_pred))\nprint(\"Accuracy en test:\", accuracy_score(y_test, y_test_pred))\nprint(\"F1 Score en train:\", f1_score(y_train, y_train_pred, average='macro'))\nprint(\"F1 Score en test:\", f1_score(y_test, y_test_pred, average='macro'))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAccuracy en train: 0.8713887666813316\nAccuracy en test: 0.6593669803250641\nF1 Score en train: 0.8716370666841465\nF1 Score en test: 0.6435618001934287\n```\n:::\n:::\n\n\n## Preparar Datos para Visualizar: {.fade-in}\n\n::: {#1b4a19bd .cell execution_count=17}\n``` {.python .cell-code}\nimportances = modelo_rf.feature_importances_\nfeature_names = X_train.columns\n```\n:::\n\n\n## Visualizar la Importancia de las Características: {.fade-in}\nSe visualiza la importancia de las características en el modelo de Random Forest.\n\n::: {#1b10bac4 .cell execution_count=18}\n``` {.python .cell-code}\nindices = np.argsort(importances)[::-1]\nplt.figure(figsize=(15, 6))\nplt.title(\"Importancia de cada Feature en el Random Forest\")\nplt.bar(range(X_train.shape[1]), importances[indices], align=\"center\")\nplt.xticks(range(X_train.shape[1]), feature_names[indices], rotation=90)\nplt.xlim([-1, X_train.shape[1]])\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](randomforest_model_files/figure-html/cell-19-output-1.png){width=1174 height=565}\n:::\n:::\n\n\n",
    "supporting": [
      "randomforest_model_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}